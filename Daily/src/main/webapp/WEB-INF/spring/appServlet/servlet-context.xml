<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>
 
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<context:component-scan base-package="com.daily.project, service, util" />
	
	<!--JDBC Connection   
	** Mysql
	
	******* 자신에 맞는 비밀번호 입력하세요~ **********
	--> 
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver" />
		<beans:property name="url" value="jdbc:mysql://127.0.0.1:3306/daily?allowPublicKeyRetrieval=true&amp;useSSL=false&amp;serverTimezone=UTC" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="mysql" />
	</beans:bean>
	
	<!-- 2) Mybatis 설정 
		 -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<beans:property name="dataSource" ref="dataSource" />
		
		<beans:property name="mapperLocations" value="classpath:/mappers/**/*Mapper.xml" />
		
	</beans:bean>
	
	<!-- 2.2) SqlSessionTemplate-->	
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean>		
	
	<!-- JsonView 설정  -->
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView" /> 
	<beans:bean id="viewResolver" 
			class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1" />
	</beans:bean>
	
	<!-- ** Image Upload :  MultipartResolver -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="-1"></beans:property>
	</beans:bean>
	<!-- => id , name 변경 불가능 
	( 대부분의  Resolver 로 끝나는 클래스의 경우에는 이미 정해져 있기 때문에 변경 불가능 하다 )
	=> maxUploadSize 는 지정하지 않으면 default 값은 -1 이며 크기 무제한 이 됨.  -->
	
	<!-- ** Image DownLoad 
       => 다운로드를 처리할 ViewResolver 클래스 등록
         => id="download" 와  컨트롤러의 매핑메서드에서 리턴된 view name 과 같아야 한다.    -->
   <beans:bean id="download" class="downTest.DownloadView"/>
	
</beans:beans>
